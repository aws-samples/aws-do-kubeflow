#!/bin/bash

# Source helper functions
source ./.fun

# Proxy settings [optional] - set if your network requires a proxy to connect to the Internet
export http_proxy=
export https_proxy=
export no_proxy=localhost

# AWS Client Configuration
export AWS_DEFAULT_REGION=us-west-2
export AWS_REGION=$(aws configure get region)
if [ "${AWS_REGION}" == "" ]; then
        export AWS_REGION=$AWS_DEFAULT_REGION
fi
export S3_BUCKET=aws-do-kubeflow-$(whoami)
## AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY - credentials for access to AWS, if not specified, instance profile will be used
#export AWS_ACCESS_KEY_ID=$(if [ -f wd/.aws_id ]; then cat wd/.aws_id; else echo ""; fi | tr -d '\r')
#export AWS_SECRET_ACCESS_KEY=$(if [ -f wd/.aws_cr ]; then cat wd/.aws_cr; else echo ""; fi | tr -d '\r')

# Kubeflow Configuration
#EKS Configuration MANDATORY for EKS or Hyperpod EKS
CTX=$(kubectl config current-context | cut -d '/' -f 2)
if [ ! "$?" == 0 ]; then
        echo ""
        echo "Could not determine current EKS cluster, please specify cluster name in .env"
        echo ""
        export AWS_EKS_CLUSTER="specify EKS cluster name here"
else
        export AWS_EKS_CLUSTER=$CTX
fi

#Input only if you have an EKS Hyperpod Cluster
export AWS_EKS_HYPERPOD_CLUSTER=""

#Name of hyperpod cluster can be determined automatically using the line below
# EKS or HyperpodEKS
# CLUSTER_TYPE=eks (default) OR CLUSTER_TYPE=hyperpod
if [ "$AWS_EKS_HYPERPOD_CLUSTER" == "" ]; then
        export CLUSTER_TYPE=eks
else
        export CLUSTER_TYPE=hyperpod
fi

export KF_NAME=${AWS_EKS_CLUSTER}
export BASE_DIR=${HOME}/environment
export KF_DIR=${BASE_DIR}/${KF_NAME}
export CONFIG_URI="https://raw.githubusercontent.com/kubeflow/manifests/v1.9.1-branch/example/kustomization.yaml"
export CONFIG_FILE=${KF_DIR}/kustomization.yaml

## KF_DISTRO - Kubeflow distribution to deploy KF_DISTRO=aws(default)|generic 
#export KF_DISTRO=aws
export KF_DISTRO=generic
## KF_AWS_SERVICES_STR - when KF_DISTRO=aws, specify a hyphen-delimited list of optional managed services from AWS to use with Kubeflow. When no managed services are specified, the vanilla AWS distribution is installed. Options for managed services include s3, rds, and cognito.
## Default: KF_AWS_SERVICES_STR=
## Examples: KF_AWS_SERVICES_STR=s3-rds, KF_AWS_SERVICES_STR=cognito, KF_AWS_SERVICES_STR=s3-cognito-rds
## Note: Integration with managed services is not yet released in this project
export KF_AWS_SERVICES_STR=
## KUBEFLOW_RELEASE_VERSION - release version of opensource kubeflow
export KUBEFLOW_RELEASE_VERSION=v1.9.1
## AWS_RELEASE_VERSION - release version of aws kubeflow manifests when deploying AWS Kubeflow
export AWS_RELEASE_VERSION=v1.7.0-aws-b1.0.3
export OSS_KUBEFLOW_RELEASE_VERSION_FOR_AWS=v1.7.0
## KF_CLUSTER_ACCESS - enable cluster access for Kubeflow user. KF_CLUSTER_ACCESS=true(default)|false
export KF_CLUSTER_ACCESS=true
## KF_PIPELINES_ACCESS - enable kubeflow pipelines access for Kubeflow user. KF_PIPELINES_ACCESS=true(default)|false
export KF_PIPELINES_ACCESS=true

# Docker image settings
## REGISTRY: [optional] - Docker registry path including trailing "/". Example: registry.company.com/demo/
export REGISTRY=
if [ -n "${REGISTRY}" ]; then
  if [ "${REGISTRY: -1}" != "/" ]; then
    export REGISTRY="${REGISTRY}/"
  fi
fi
## IMAGE: <required> - Docker image name for this project. Example: myapp
export IMAGE=aws-do-kubeflow
## VERSION: [optional] - Version tag for this Docker image. Example: v20180302
#export VERSION=v$(date +%Y%m%d)
export VERSION=v20250110
export TAG=$(if [ -z "${VERSION}" ]; then echo ""; else echo ":${VERSION}"; fi)
## BUILD_OPTS: [optional] - arguments for the docker image build command
export BUILD_OPTS="--build-arg http_proxy=${http_proxy} --build-arg https_proxy=${https_proxy} --build-arg no_proxy=${no_proxy}"

# Docker container runtime settings
## CONTAINER_NAME: [optional] - Name of the Docker container including the --name switch. Example --name myapp
export CONTAINER=${IMAGE}
export CONTAINER_NAME="--name ${CONTAINER}"
## Port map [optional] - Mapping of external to internal ports including the -p switch. Example -p 80:8080 
export PORT_MAP="-p 80:8080"
## Volume map [optional] - Mapping of external to internal paths including the -v switch. Example $(pwd):/wd
export VOL_MAP="-v $(pwd):/wd -v ${HOME}/.kube:/root/.kube -v ${HOME}/.aws:/root/.aws -v /var/run/docker.sock:/var/run/docker.sock"
## Network [optional] - Network name including the --net switch. Example --net mynet
export NETWORK=
## RUN_OPTS [optional] - additional options to specify with the run comman. Example -e POSTGRES_DB=dbname
export RUN_OPTS="-e http_proxy=$http_proxy -e https_proxy=$https_proxy -e no_proxy=$no_proxy -e CLUSTER_TYPE=$CLUSTER_TYPE -e AWS_EKS_HYPERPOD_CLUSTER=$AWS_EKS_HYPERPOD_CLUSTER -e AWS_EKS_CLUSTER=$AWS_EKS_CLUSTER -e AWS_REGION=$AWS_REGION -e KF_NAME=$KF_NAME -e BASE_DIR=$BASE_DIR -e KF_DIR=$KF_DIR -e CONFIG_URI=$CONFIG_URI -e CONFIG_FILE=$CONFIG_FILE -e KF_DISTRO=$KF_DISTRO -e KF_AWS_SERVICES_STR=${KF_AWS_SERVICES_STR} -e KUBEFLOW_RELEASE_VERSION=$KUBEFLOW_RELEASE_VERSION -e AWS_RELEASE_VERSION=$AWS_RELEASE_VERSION -e S3_BUCKET=$S3_BUCKET -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -e KF_CLUSTER_ACCESS=$KF_CLUSTER_ACCESS -e KF_PIPELINES_ACCESS=$KF_PIPELINES_ACCESS"
